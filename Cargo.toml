[package]
name = "lidi"
version = "0.9.0"
authors = ["Vincent Dagonneau <vincent.dagonneau@ssi.gouv.fr>"]
edition = "2018"
license = "LGPL-3.0-only"

[[bin]]
name = "lidi-up"
path = "src/up_controller.rs"
required-features = ["controller"]

[[bin]]
name = "lidi-up-worker"
path = "src/up_worker.rs"
required-features = ["worker"]

[[bin]]
name = "lidi-down"
path = "src/down_controller.rs"
required-features = ["controller"]

[[bin]]
name = "lidi-down-worker"
path = "src/down_worker.rs"
required-features = ["worker"]

[features]
controller = []
worker = []

[profile.release]
lto = true
codegen-units = 1
debug = true

[profile.test]
opt-level = 3
lto = true
codegen-units = 1

[dependencies]
# Getrandom is used to provide randomness in various places.
getrandom = { version = "0.2.0", default-features = false }
# The nix crate is used for interfacing with the UNIX features we need: inotify,
# epoll, sockets, file descriptors, etc, ...
nix = "0.26"
# This crate is used to do the fountain coding of the file chunks.
raptorq = "1.4"
# serde and serde-derive are used to serialize the datagrams on the wire.
serde = { version = "1.0", features = ["derive"] }
# bincode is the actual format we use for serialization.
bincode = "1.3"
log = "0.4"
env_logger = { version = "0.10", default-features = false }
# This crate is used for calculating checksums for the files transfered.
blake3 = { version = "1.3", default-features = false }
# The syscallz crate is used for seccomp.
syscallz = "0.16"
# This crate is used to create/read the extended attributes holding transfers
# metadata.
xattr = "1.0"
# Nom and cookie-factory are used in order to provide fast serialization / 
# deserialization for datagrams.
nom = "7.1"
cookie-factory = "0.3"
# Toml is used for configuration.
toml = "0.5"
# CBOR is used for communication with the down side.
serde_cbor = "*"

[package.metadata.deb]
maintainer = "Vincent Dagonneau <vincent.dagonneau@ssi.gouv.fr>"
copyright = "2020, Vincent Dagonneau <vincent.dagonneau@ssi.gouv.fr>"
license-file = ["LICENSE", "0"]
extended-description = """A double-sided counter for unidirectional network diode setups."""
depends = "$auto"
section = "utility"
priority = "optional"
maintainer-scripts = "debian/"

[package.metadata.deb.variants.up]
depends = ""
conf-files = [
    "/etc/lidi/up.env"
]
maintainer-scripts = "debian/maintainer-scripts/up"
features = ["controller", "worker"]
assets = [
    ["target/release/lidi-up", "usr/bin/", "555"],
    ["target/release/lidi-up-worker", "usr/bin/", "555"],
    ["debian/systemd/lidi-up.service", "/usr/lib/systemd/system/", "600"],
    ["debian/systemd/lidi-sysctl.service", "/usr/lib/systemd/system/", "600"],
    ["debian/systemd/up.env", "/etc/lidi/", "600"],
    ["debian/systemd/up.toml", "/etc/lidi/", "600"],
]

[package.metadata.deb.variants.down]
depends = ""
conf-files = [
    "/etc/lidi/down.env"
]
maintainer-scripts = "debian/maintainer-scripts/down"
features = ["controller", "worker"]
assets = [
    ["target/release/lidi-down", "usr/bin/", "555"],
    ["target/release/lidi-down-worker", "usr/bin/", "555"],
    ["send-up.py", "usr/bin/", "555"],
    ["debian/systemd/lidi-down.service", "/usr/lib/systemd/system/", "600"],
    ["debian/systemd/lidi-down.socket", "/usr/lib/systemd/system/", "600"],
    ["debian/systemd/lidi-sysctl.service", "/usr/lib/systemd/system/", "600"],
    ["debian/systemd/down.env", "/etc/lidi/", "600"],
    ["debian/systemd/down.toml", "/etc/lidi/", "600"],
]
